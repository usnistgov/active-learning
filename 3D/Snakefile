# run with `snakemake --cores 1`

from pathlib import Path

configfile: "config.yaml"

n_iterations = config['n_iterations']
scoring = config['scoring']
n_query = config['n_query']
job_id = config['job_id']

work_dir = lambda x: str( Path(f"run_{job_id}") / x)


rule all:
    input:
        work_dir(f"plot.png"),
        work_dir("config.yaml")

rule ipynb:
    input:
        "{notebook}.md"
    output:
        "{notebook}.ipynb"
    shell:
        "jupytext {input} --to ipynb"

rule copy:
    input:
       config="config.yaml"
    output:
       config=work_dir("config.yaml"),
    shell:
       "cp {input.config} {output.config};"
       "echo \"commit_hash: $(git log -1 --pretty=format:\\\"%h\\\")\" >> {output.config};"
       "echo \"date: \\\"$(date)\\\"\" >> {output.config}"

rule pca:
    input:
        da="data_shuffled.npz",
        nb="generate-pca-data.ipynb"
    output:
        da=work_dir("pca.npz"),
        nb=work_dir("generate-pca-data.ipynb")
    shell:
        "papermill {input.nb} {output.nb} -p output_file {output.da} -p input_file {input.da}"

rule run_active:
    input:
        da=work_dir("pca.npz"),
        nb="run-active.ipynb"
    output:
        da=work_dir("active_{iteration}.h5"),
        nb=work_dir("run-active-{iteration}.ipynb")
    params:
        iterations=n_query,
        scoring=scoring
    shell:
        "papermill {input.nb} {output.nb} -p output_file {output.da} -p input_file {input.da} -p use_mse {params.scoring} -p iterations {params.iterations}"

rule overall:
    input:
        da=work_dir("pca.npz"),
        nb="overall-accuracy.ipynb"
    output:
        da=work_dir("overall.npz"),
        nb=work_dir("overall.ipynb")
    params:
        n_sample=n_iterations,
        scoring=scoring
    shell:
        "papermill {input.nb} {output.nb} -p output_file {output.da} -p input_file {input.da} -p scoring {params.scoring} -p iterations {params.n_sample}"


rule plot:
    input:
        da=[work_dir(f"active_{i}.h5") for i in range(n_iterations)],
        nb="plot.ipynb",
        ov=work_dir(f"overall.npz")
    output:
        da=work_dir(f"plot.png"),
        nb=work_dir("plot.ipynb")
    params:
        scoring=scoring
    shell:
        "FILES=$(echo '{input.da}' | tr ' ' ,);"
        "papermill {input.nb} {output.nb} -p output_file {output.da} -p scoring {params.scoring} -p overall_input_file {input.ov} -y \"input_files: [ ${{FILES}} ]\";"
